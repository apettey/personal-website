{
  "roles": {
    "0": {
      "logo_url": "wonder.jpeg",
      "title": "Chief Technology Officer",
      "start_date": "Oct 2018",
      "end_date": "July 2021",
      "description": ""
    },
    "1": {
      "logo_url": "olxgroup.jpeg",
      "title": "Engineering Manager",
      "start_date": "Oct 2018",
      "end_date": "July 2021",
      "description": "I managed a new team inside of the Trust and Safety department that was tasked with re-architecting the systems used to catch and moderate fraud throughout OLX globally. I was responsible for the entire team including hiring, compensation and firing.\n\nWe used Spring Boot, Python, NodeJS and AWS to implement the entire system. Ultimately I was responsible for the entire department before leaving OLX Group.\n\n\nThe company's focus was on increasing the ability to deploy machine learning models across data within OLX as a whole. We set out the following priorities for the platform.\n\n\n- Standardized and easy to access API to receive information\n - Real time access to data\n - Storage to the global data lake for training purposes\n - Cataloging and describing data\n - GDPR requests\n - More than one billion events per day\n- Designed with Machine Learning first in mind\n - Easy to train models\n - Easy to test models\n - Easy to deploy models\n - Easy to monitor models\n- Simplified API for communicating actions that should be taken on Users and Content inside of OLX\n- User interface for multiple countries to moderate and interpret information about the system\n\nWe designed a distributed system using the following technologies:\n\n\n- AWS\n - Kinesis\n - Lambda\n - SQS/SNS\n - Batch\n - SageMaker\n - DynamoDB\n - RDS\n - ElasticCache\n - ElasticSearch\n- SpringBoot\n - Kinesis Client Libraries\n - DynamoDB\n- ReactJS"
    },
    "2": {
      "logo_url": "olxgroup.jpeg",
      "title": "Senior Java Engineer",
      "start_date": "June 2017",
      "end_date": "Sept 2018",
      "description": "Development of the Global Image Storage Service for OLX Group [Apollo]. 300+ Million users use OLX to buy and sell items every year, with images being critical to enabling transactions for all users across the globe.\n\nThe project was built with Java + Spring Boot on AWS using S3, RDS and EC2 with K8s before EKS. Subsequently the team migrated to EKS when it was released.\n\nApollo was initially required to:\n\n - Store images and documents securely\n - Allow for real time image manipulation [Cropping, quality, watermarking, etc.]\n - Fully redundant and multi-region cloud native\n - Edge distribution through Akamai [later CloudFront]\n - Serve more than 10 000 requests per minute and scale further incase of loss of an edge node\n\nThe team integrated Apollo across the entire OLX Group serving all the major products inside the portfolio. Once this migration was completed the team started to build metadata services and storage of video and audio."
    },
    "3": {
      "logo_url": "olxgroup.jpeg",
      "title": "Lead Android Developer",
      "start_date": "Aug 2015",
      "end_date": "May 2017",
      "description": "In charge of the iOS and Android mobile applications including the following:\n - Backend API design\n - UI/UX\n - Deployment of applications\n - Trust and Safety on the Applications\n - CI/CD \n\nThe Application was the top 5 downloaded app in every country with millions of monthly active users across almost every device in circulation.\n\nAdditional projects include:\n - Refactoring a PHP monolith to separate the API layer\n - Changing trust and safety in Africa using verified third parties to assist in sales"
    },
    "4": {
      "logo_url": "tedxcapetown.jpeg",
      "title": "Android + API Event App Lead",
      "start_date": "Mar 2014",
      "end_date": "Aug 2014",
      "description": "I was the Android and API lead for creating the TedXCapeTown 2014 App, working with Java and PHP for the backend restful web services. The App was used for the TedXCapeTown official event in 2014."
    }
  }
}